{
  "projects": [
    {
      "title": "CanvaKeys App",
      "slug": "canvakeys",
      "image": "https://images.unsplash.com/photo-1551650975-87deedd944c3?q=80&w=1200&auto=format&fit=crop",
      "blurb": "Pitch detection app for Android with real-time piano visualization and color-coded notes.",
      "long": "Developed real-time audio pitch detection Android app using Kotlin and TarsosDSP library with responsive UI during live audio processing. Built custom PianoRoll View with real-time visualization, implementing viewport culling for optimized rendering performance. Debugged integration issues using LogCat and optimized memory with Android Profiler, eliminating UI lag and improving performance. Implemented FFP_YIN algorithm with dual-layer filtering, reducing false positive detection through custom error handling.",
      "video": "/canvakeys-demo.mp4"
    },
    {
      "title": "TurnFlow App",
      "slug": "turnflow",
      "image": "https://images.unsplash.com/photo-1512941937669-90a1b58e7e9c?q=80&w=1200&auto=format&fit=crop",
      "blurb": "Functional MVP for a turn management and notification app built in Flutter.",
      "long": "This is a full finished MVP for a turn management and efficiency app that I built using the multiplatform framework Dart / Flutter. The main purpose of this app is to create and manage queue turns by allowing the user to create and track his own turn in a queue with his own portable mobile device, as well as receiving notifications when his turn is close. I had this idea one day while waiting for a long queue: I wanted to go out and buy some food while waiting but I was worried I may loose my turn. I thought that if I had an app that actually could send me a notification when my turn was close, I would be able to go buy my groceries and even buy a coffee and just come back to the waiting room when my turn was close. I investigated and discovered that while there are some implementations available internationally that seemed to tackle this issue for private companies and very specific cases, there didn't seem to be a reliable solution across the board that would be simple, user friendly, and adapt to various types of environments where long cues may happen: hospitals, public services, private healthcare, delivering companies, banks, etc. I decided to built this app as part of my professional course in Mobile App Development and I used Flutter because I wanted the app to be multiplatform and easily escalable across different platforms. I realized as well that building a backend for the prototype wouldn't be the best idea, as the whole concept behind this piece of software is that it should be integrated into the existing environemnt of the company or public service interested in using it. For such reason, I focused in building a functioning prototype that could serve to showcase the app to possible clients and people interested without the need of real people actually tacking turns and physically waiting in a real cue. Hence, I developed algorithm that automatically randomizes a list of realistic turns every time the user opens the app and creates his turn. That means that as soon as his turn is created, he will have a realistic experience of a queue with different time durations and degrees of urgency per turn. Then, the app is programmed so that a visual and audible notification is sent to the user whenever three or one turn remains for his turn. Because the algorithm displays a aproximated time duration per turn, the notifications also shows up an aproximate amount of minutes that remain for his own turn. The purpose of this is to give to the user an idea of how much time he has to return to the queue location and prepare for his turn. Finally, when the turn of the user arrives, the screen automatically will show a green background and a different interface alerting the user that now is his turn and giving him an option to contact support if he needs it. When his turn finally finishes, he will be presented with a different screen offering him the possibility of rating both the service and the app, providing us the opportunity to collect user data and use it to improve the service.",
      "video": ""
    }
  ]
}
